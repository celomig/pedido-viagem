openapi: 3.0.3
info:
  title: PedidoViagem
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/travel-orders:
    get:
      summary: 'List all travel orders with optional filters.'
      operationId: listAllTravelOrdersWithOptionalFilters
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      requester_name: 'Maria Souza'
                      destination: 'Rio de Janeiro'
                      departure_date: '2025-02-09'
                      return_date: '2025-02-16'
                      status: approved
                      created_at: '2025-02-02 23:17:48'
                      updated_at: '2025-02-02 23:17:48'
                      created_by:
                        id: 2
                        name: 'Maria Souza'
                  message:
                    text: 'Pedidos de viagem listados com sucesso.'
                    type: info
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        requester_name: 'Maria Souza'
                        destination: 'Rio de Janeiro'
                        departure_date: '2025-02-09'
                        return_date: '2025-02-16'
                        status: approved
                        created_at: '2025-02-02 23:17:48'
                        updated_at: '2025-02-02 23:17:48'
                        created_by:
                          id: 2
                          name: 'Maria Souza'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        requester_name:
                          type: string
                          example: 'Maria Souza'
                        destination:
                          type: string
                          example: 'Rio de Janeiro'
                        departure_date:
                          type: string
                          example: '2025-02-09'
                        return_date:
                          type: string
                          example: '2025-02-16'
                        status:
                          type: string
                          example: approved
                        created_at:
                          type: string
                          example: '2025-02-02 23:17:48'
                        updated_at:
                          type: string
                          example: '2025-02-02 23:17:48'
                        created_by:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 2
                            name:
                              type: string
                              example: 'Maria Souza'
                  message:
                    type: object
                    properties:
                      text:
                        type: string
                        example: 'Pedidos de viagem listados com sucesso.'
                      type:
                        type: string
                        example: info
      tags:
        - 'Travel Orders'
      security: []
    post:
      summary: 'Store a new travel order.'
      operationId: storeANewTravelOrder
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Pedido criado com sucesso!'
                  data:
                    id: 2
                    requester_name: 'Maria Souza'
                    destination: 'Rio de Janeiro'
                    departure_date: '2025-02-09'
                    return_date: '2025-02-16'
                    status: requested
                    created_at: '2025-02-02 23:17:48'
                    updated_at: '2025-02-02 23:17:48'
                    created_by:
                      id: 2
                      name: 'Maria Souza'
                properties:
                  message:
                    type: string
                    example: 'Pedido criado com sucesso!'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      requester_name:
                        type: string
                        example: 'Maria Souza'
                      destination:
                        type: string
                        example: 'Rio de Janeiro'
                      departure_date:
                        type: string
                        example: '2025-02-09'
                      return_date:
                        type: string
                        example: '2025-02-16'
                      status:
                        type: string
                        example: requested
                      created_at:
                        type: string
                        example: '2025-02-02 23:17:48'
                      updated_at:
                        type: string
                        example: '2025-02-02 23:17:48'
                      created_by:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: 'Maria Souza'
      tags:
        - 'Travel Orders'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requester_name:
                  type: string
                  description: 'O nome do solicitante.'
                  example: 'Maria Souza'
                  nullable: false
                destination:
                  type: string
                  description: 'O destino da viagem.'
                  example: 'Rio de Janeiro'
                  nullable: false
                departure_date:
                  type: date
                  description: 'A data de partida.'
                  example: '2025-02-09'
                  nullable: false
                return_date:
                  type: date
                  description: 'A data de retorno.'
                  example: '2025-02-16'
                  nullable: false
              required:
                - requester_name
                - destination
                - departure_date
                - return_date
      security: []
  '/api/travel-orders/{id}':
    get:
      summary: 'Show a specific travel order by ID.'
      operationId: showASpecificTravelOrderByID
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 2
                    requester_name: 'Maria Souza'
                    destination: 'Rio de Janeiro'
                    departure_date: '2025-02-09'
                    return_date: '2025-02-16'
                    status: approved
                    created_at: '2025-02-02 23:17:48'
                    updated_at: '2025-02-02 23:17:48'
                    created_by:
                      id: 2
                      name: 'Maria Souza'
                  message:
                    text: 'Pedido de viagem encontrado com sucesso.'
                    type: info
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      requester_name:
                        type: string
                        example: 'Maria Souza'
                      destination:
                        type: string
                        example: 'Rio de Janeiro'
                      departure_date:
                        type: string
                        example: '2025-02-09'
                      return_date:
                        type: string
                        example: '2025-02-16'
                      status:
                        type: string
                        example: approved
                      created_at:
                        type: string
                        example: '2025-02-02 23:17:48'
                      updated_at:
                        type: string
                        example: '2025-02-02 23:17:48'
                      created_by:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: 'Maria Souza'
                  message:
                    type: object
                    properties:
                      text:
                        type: string
                        example: 'Pedido de viagem encontrado com sucesso.'
                      type:
                        type: string
                        example: info
      tags:
        - 'Travel Orders'
      security: []
    patch:
      summary: 'Update an existing travel order.'
      operationId: updateAnExistingTravelOrder
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Pedido atualizado com sucesso!'
                  data:
                    id: 2
                    requester_name: 'Maria Souza'
                    destination: 'Rio de Janeiro'
                    departure_date: '2025-02-09'
                    return_date: '2025-02-16'
                    status: approved
                    created_at: '2025-02-02 23:17:48'
                    updated_at: '2025-02-02 23:17:48'
                    created_by:
                      id: 2
                      name: 'Maria Souza'
                properties:
                  message:
                    type: string
                    example: 'Pedido atualizado com sucesso!'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      requester_name:
                        type: string
                        example: 'Maria Souza'
                      destination:
                        type: string
                        example: 'Rio de Janeiro'
                      departure_date:
                        type: string
                        example: '2025-02-09'
                      return_date:
                        type: string
                        example: '2025-02-16'
                      status:
                        type: string
                        example: approved
                      created_at:
                        type: string
                        example: '2025-02-02 23:17:48'
                      updated_at:
                        type: string
                        example: '2025-02-02 23:17:48'
                      created_by:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: 'Maria Souza'
      tags:
        - 'Travel Orders'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                requester_name:
                  type: string
                  description: 'O nome do solicitante.'
                  example: velit
                  nullable: false
                destination:
                  type: string
                  description: 'O destino da viagem.'
                  example: voluptatibus
                  nullable: false
                departure_date:
                  type: date
                  description: 'A data de partida.'
                  example: perferendis
                  nullable: false
                return_date:
                  type: date
                  description: 'A data de retorno.'
                  example: omnis
                  nullable: false
                status:
                  type: string
                  description: 'O status da viagem. Exemplo: approved'
                  example: reiciendis
                  nullable: false
      security: []
    delete:
      summary: 'Remove a travel order.'
      operationId: removeATravelOrder
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Pedido removido com sucesso!'
                properties:
                  message:
                    type: string
                    example: 'Pedido removido com sucesso!'
      tags:
        - 'Travel Orders'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the travel order.'
        example: esse
        required: true
        schema:
          type: string
  '/api/travel-orders/{id}/status':
    put:
      summary: 'Update the status of a travel order.'
      operationId: updateTheStatusOfATravelOrder
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Status do pedido atualizado com sucesso!'
                  data:
                    id: 2
                    requester_name: 'Maria Souza'
                    destination: 'Rio de Janeiro'
                    departure_date: '2025-02-09'
                    return_date: '2025-02-16'
                    status: approved
                    created_at: '2025-02-02 23:17:48'
                    updated_at: '2025-02-02 23:17:48'
                    created_by:
                      id: 2
                      name: 'Maria Souza'
                properties:
                  message:
                    type: string
                    example: 'Status do pedido atualizado com sucesso!'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      requester_name:
                        type: string
                        example: 'Maria Souza'
                      destination:
                        type: string
                        example: 'Rio de Janeiro'
                      departure_date:
                        type: string
                        example: '2025-02-09'
                      return_date:
                        type: string
                        example: '2025-02-16'
                      status:
                        type: string
                        example: approved
                      created_at:
                        type: string
                        example: '2025-02-02 23:17:48'
                      updated_at:
                        type: string
                        example: '2025-02-02 23:17:48'
                      created_by:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: 'Maria Souza'
      tags:
        - 'Travel Orders'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: 'O novo status da viagem. Exemplo: approved'
                  example: est
                  nullable: false
              required:
                - status
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the travel order.'
        example: porro
        required: true
        schema:
          type: string
  /api/login:
    post:
      summary: 'Login a user.'
      operationId: loginAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'John Doe'
                    email: johndoe@example.com
                  access_token: 'Bearer <token>'
                  token_type: Bearer
                  message:
                    text: 'Login realizado com sucesso!'
                    type: success
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: johndoe@example.com
                  access_token:
                    type: string
                    example: 'Bearer <token>'
                  token_type:
                    type: string
                    example: Bearer
                  message:
                    type: object
                    properties:
                      text:
                        type: string
                        example: 'Login realizado com sucesso!'
                      type:
                        type: string
                        example: success
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: johndoe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user.'
                  example: secret
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/users:
    get:
      summary: 'List all users.'
      operationId: listAllUsers
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'John Doe'
                      email: johndoe@example.com
                  message:
                    text: 'Lista de usuários recuperada com sucesso.'
                    type: info
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'John Doe'
                        email: johndoe@example.com
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'John Doe'
                        email:
                          type: string
                          example: johndoe@example.com
                  message:
                    type: object
                    properties:
                      text:
                        type: string
                        example: 'Lista de usuários recuperada com sucesso.'
                      type:
                        type: string
                        example: info
      tags:
        - 'User Management'
      security: []
    post:
      summary: 'Create a new user.'
      operationId: createANewUser
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'John Doe'
                    email: johndoe@example.com
                  message:
                    text: 'Usuário criado com sucesso.'
                    type: success
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: johndoe@example.com
                  message:
                    type: object
                    properties:
                      text:
                        type: string
                        example: 'Usuário criado com sucesso.'
                      type:
                        type: string
                        example: success
      tags:
        - 'User Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'The email of the user.'
                  example: johndoe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user.'
                  example: secret
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  '/api/users/{id}':
    put:
      summary: 'Update an existing user.'
      operationId: updateAnExistingUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'John Doe'
                    email: johndoe@example.com
                  message:
                    text: 'Usuário atualizado com sucesso.'
                    type: success
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: johndoe@example.com
                  message:
                    type: object
                    properties:
                      text:
                        type: string
                        example: 'Usuário atualizado com sucesso.'
                      type:
                        type: string
                        example: success
      tags:
        - 'User Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The updated name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'The updated email of the user.'
                  example: johndoe@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The updated password of the user.'
                  example: newpassword
                  nullable: false
      security: []
    delete:
      summary: 'Delete a user.'
      operationId: deleteAUser
      description: ''
      parameters: []
      responses:
        204:
          description: ''
      tags:
        - 'User Management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/logout:
    post:
      summary: 'Logout a user.'
      operationId: logoutAUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message:
                    text: 'Logout realizado com sucesso!'
                    type: success
                properties:
                  message:
                    type: object
                    properties:
                      text:
                        type: string
                        example: 'Logout realizado com sucesso!'
                      type:
                        type: string
                        example: success
      tags:
        - 'User Management'
      security: []
tags:
  -
    name: 'Travel Orders'
    description: ''
  -
    name: 'User Management'
    description: ''
